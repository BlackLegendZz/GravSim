// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Point
{
    float mass;
    float3 velocity;
    float3 position;
};

RWStructuredBuffer<Point> points;
int numPoints;
const float gravConst = 0.667;

[numthreads(100,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    Point p = points[id.x];
    
    for (int i = 0; i < numPoints; i++)
    {
        Point pi = points[i];
        if (i == asint(id.x))
        {
            continue;
        } 
        
        float3 deltaDist = p.position - pi.position;
        float distSqr = pow(distance(p.position, pi.position), 2);
        float force = (p.mass * pi.mass) / distSqr;
        
        float3 deltaVelocity = deltaDist * force;
        p.velocity += deltaVelocity;
    }
    p.position -= p.velocity;
    points[id.x] = p;
}
